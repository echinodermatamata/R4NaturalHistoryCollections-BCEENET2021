# Create a list of required packages
list.of.packages <- c("dplyr", # v.0.8.5
"tidyr", # v.1.0.2
"plyr", # v.1.8.6
"spocc", # v.1.0.8
"ridigbio", # v.0.3.5
"tibble", # v.3.0.0
"rbison",
"CoordinateCleaner",
"lubridate",
"ggplot2",
"gtools",
"leaflet",
"sp",
"rgeos",
"ggspatial",
"raster",
"agricolae",
"gridExtra",
"sf")
# Compare list of required to installed packages
## Retain only missing packages
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
# Run for loop to install any missing packages
for(i in 1:length(new.packages)){
install.packages(new.packages[i])
}
# Create a list of required packages
list.of.packages <- c("dplyr", # v.0.8.5
"tidyr", # v.1.0.2
"plyr", # v.1.8.6
"spocc", # v.1.0.8
"ridigbio", # v.0.3.5
"tibble", # v.3.0.0
"rbison",
"CoordinateCleaner",
"lubridate",
"ggplot2",
"gtools",
"leaflet",
"sp",
"rgeos",
"ggspatial",
"raster",
"agricolae",
"gridExtra",
"sf")
# Compare list of required to installed packages
## Retain only missing packages
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
# Run for loop to install any missing packages
for(i in 1:length(new.packages)){
install.packages(new.packages[i])
}
library(CoordinateCleaner)
library(lubridate)
source("functions/DownloadingDataMore.R")
spocc_combine("Shortia galacifolia", "data/Shortia_galacifolia_raw.csv")
rawdf <- read.csv("data/Shortia_galacifolia_raw.csv")
names(rawdf)
unique(rawdf$name)
search <-  c("Shortia galacifolia")
df <- rawdf %>%
filter(grepl(search, name, ignore.case =  TRUE)) %>%
mutate(new.name = "Shortia galacifolia")
nrow(df)
df$Latitude <-  dplyr::coalesce(df$Latitude, df$spocc.latitude)
df$Longitude <-  dplyr::coalesce(df$Longitude, df$spocc.longitude)
df$date <-  dplyr::coalesce(df$date, df$spocc.date)
df <- df %>%
dplyr::select(ID = ID,
name = new.name,
basis = basis,
coordinateUncertaintyInMeters = coordinateUncertaintyInMeters,
informationWithheld = informationWithheld,
lat = Latitude,
long = Longitude,
date = date)
df <- df %>%
filter(!is.na(long)) %>%
filter(!is.na(lat))
nrow(df)
### Using the R base function ‘round’, we round lat and long to two decimal places
df$lat <- round(df$lat, digits = 2)
df$long <- round(df$long, digits = 2)
df <- df %>%
filter(long != 0.00) %>%
filter(lat != 0.00)
#### at biodiversity institutions and remove any points that are occurring at institutions.
df <- cc_inst(df,
lon = "long",
lat = "lat",
species = "name")
# Load Packages
library(CoordinateCleaner)
nrow(df)
df$date <- lubridate::ymd(df$date)
df <- df %>%
dplyr::mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date))
df <- distinct(df, lat, long, year, month, day, .keep_all = TRUE)
nrow(df)
write.csv(df, "data/Shortia_galacifolia_061521-cleaned.csv", row.names = FALSE)
library(ggplot2)
library(leaflet)
library(sp)
library(rgeos)
library(ggspatial)
library(sf)
df <- read.csv("data/Shortia_galacifolia_061521-cleaned.csv")
df_fixed <- st_as_sf(df, coords = c("long", "lat"), crs = 4326)
### Here we download a USA map, a state level USA map, and a county level USA map.
USA <- borders(database = "usa", colour = "gray50", fill = "gray50")
states <-  borders("state", colour = "black", fill = NA)
county <- borders(database = "county", colour = "gray40", fill = NA)
simple_map <- ggplot() +
USA +
# Better to add state or county here - order matters!
geom_sf(df_fixed,
mapping = aes(col = name),
col = "blue") +
coord_sf(xlim = c(-86, -76), ylim = c(30, 38)) +
xlab("Longitude") +
ylab("Latitude") +
annotation_scale() +
annotation_north_arrow( height = unit(1, "cm"),
width = unit(1, "cm"),
location = "tl")
simple_map
### Add States
simple_map + states
### Add Counties
simple_map + county
pts <- SpatialPoints(df[,7:6])
## Make a simple leaflet map
m <- leaflet(pts) %>%
addCircles() %>%
addTiles()
m
m <- fitBounds(m, -86, 30, -76, 38)
m
### Make fancy icon
ShortiaIcon <- makeIcon(
iconUrl = "https://live.staticflickr.com/2914/32392790054_27192e77e6_b.jpg",
iconWidth = 18, iconHeight = 28,
iconAnchorX = 17, iconAnchorY = 27
)
m <- leaflet(pts) %>%
addTiles()  %>%
addMarkers(icon = ShortiaIcon)
m
m <- leaflet(pts) %>%
addTiles()  %>%
addMarkers(label = paste0(df$long, ", ", df$lat))
m
# Load Packages
library(gtools)
library(raster)
library(dplyr)
library(tibble)
library(agricolae)
library(gridExtra)
dfS <- read.csv("data/Shortia_galacifolia_061521-cleaned.csv")
dfG <- read.csv("data/Galax_urceolata_061521-cleaned.csv")
## Combined the two df
df <- rbind(dfS, dfG)
pts <- SpatialPoints(df[,7:6])
list <- list.files("data/bio/",
full.names = TRUE,
recursive = FALSE)
list <- mixedsort(sort(list))
## Load the rasters
envtStack <- raster::stack(list)
## Extract value for each point
ptExtracted <- raster::extract(envtStack, pts)
## Convert to data frame
ptExtracteddf <- as.data.frame(ptExtracted)
## Add species name
ptExtracteddf <- ptExtracteddf %>%
mutate(name = as.character(df$name))
# ANOVA
## Analysis of variance
### lm set the linear model
### aov runs the anova
bio1aov <- aov(lm(ptExtracteddf[, 1] ~ name, data = ptExtracteddf))
bio1aov
b1 <- HSD.test(bio1aov, trt = "name", alpha = 0.05)
bio1_group <- b1$groups
bio1_group <- rownames_to_column(bio1_group, var = "name")
bio1_group <- bio1_group %>%
select(name, groups)
part <- ptExtracteddf %>%
dplyr::select(name, bio_1)
bio1_group <- b1$groups
bio1_group <- rownames_to_column(bio1_group, var = "name")
bio1_group <- bio1_group %>%
select(name, groups)
library(dplyr)
bio1_group <- bio1_group %>%
select(name, groups)
bio1_group <- select(bio1_group,name, groups)
bio1_group <- select(bio1_group, name, groups)
bio1_group <- select(bio1_group$name, bio1_group$groups)
